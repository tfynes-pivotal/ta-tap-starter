#@ load("@ytt:data", "data")
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: #@ data.values.workloadName
  labels:
    #@ if data.values.testScanPipelineEnabled:
    apps.tanzu.vmware.com/has-tests: "true"
    #@ end
    #@ if data.values.webWorkloadType:
    apps.tanzu.vmware.com/workload-type: web
    #@ else:
    apps.tanzu.vmware.com/workload-type: server
    #@ end
    #@ if data.values.autoconfigureActuatorsEnabled:
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    #@ end
    app.kubernetes.io/part-of: #@ data.values.partOf
spec:
  #@ if data.values.webWorkloadType:
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/min-scale: #@ data.values.minimumInstanceCount
  #@ end
  build:
    env:
    - name: BP_JVM_VERSION
      value: #@ data.values.jvmVersion
  source:
    git:
      url: #@ data.values.gitUrl
      ref:
        branch: #@ data.values.gitBranch
  #@ if data.values.serviceBindingEnabled:
  serviceClaims:
  - name: postgres1
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ClassClaim
      name: #@ data.values.serviceName
  #@ end
